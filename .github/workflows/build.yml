name: Build Crystal

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        include:
          - os: macos-latest
            build_cmd: build:mac
            artifact_name: crystal-macos
            artifact_path: dist-electron/*.dmg
          - os: ubuntu-latest
            build_cmd: build:linux
            artifact_name: crystal-linux
            artifact_path: |
              dist-electron/*.deb
              dist-electron/*.AppImage
              dist-electron/*.snap
    
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Setup pnpm
      uses: pnpm/action-setup@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.15.1'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install

    - name: Build main process
      run: pnpm run build:main

    - name: Rebuild native modules
      run: pnpm run electron:rebuild

    - name: Generate NOTICES file
      run: pnpm run generate-notices

    - name: Build application
      run: pnpm run ${{ matrix.build_cmd }}
      env:
        # macOS code signing (optional for CI builds)
        CSC_LINK: ${{ matrix.os == 'macos-latest' && secrets.APPLE_CERTIFICATE || '' }}
        CSC_KEY_PASSWORD: ${{ matrix.os == 'macos-latest' && secrets.APPLE_CERTIFICATE_PASSWORD || '' }}
        # macOS notarization (optional for CI builds)
        APPLE_ID: ${{ matrix.os == 'macos-latest' && secrets.APPLE_ID || '' }}
        APPLE_APP_SPECIFIC_PASSWORD: ${{ matrix.os == 'macos-latest' && secrets.APPLE_APP_PASSWORD || '' }}
        APPLE_TEAM_ID: ${{ matrix.os == 'macos-latest' && secrets.APPLE_TEAM_ID || '' }}
        # Only enable signing when certificates are available
        CSC_IDENTITY_AUTO_DISCOVERY: ${{ matrix.os == 'macos-latest' && 'true' || 'false' }}

    - name: List build artifacts
      run: ls -la dist-electron/

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.artifact_path }}
        if-no-files-found: error
        retention-days: 7

